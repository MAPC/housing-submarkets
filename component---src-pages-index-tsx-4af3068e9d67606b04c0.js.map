{"version":3,"sources":["webpack:///./src/components/home-map/SubmarketLayer.tsx","webpack:///./src/components/home-map/Map.jsx","webpack:///./src/components/home-map/Highlight.jsx","webpack:///./src/components/home-map/Toggle.jsx","webpack:///./src/components/home-map/CardFace.jsx","webpack:///./src/components/home-map/LayerButton.tsx","webpack:///./src/components/home-map/LayerMenu.jsx","webpack:///./src/content/highlights.ts","webpack:///./src/components/home-map/Sidebar.tsx","webpack:///./node_modules/phosphor-react/dist/icons/Stack.esm.js","webpack:///./src/components/home-map/MobileSidebar.jsx","webpack:///./src/components/home-map/ToggleableMap.jsx","webpack:///./src/pages/index.tsx"],"names":["SubmarketLayer","id","data","isVisible","choropleth","choroplethBorders","forEach","row","push","ct10Id","submktId","submarketColors","Fragment","type","source","source-layer","paint","layout","visibility","navigationStyle","municipalityStyle","css","fonts","calibre","Map","viewport","dispatch","layerVisibility","useState","width","setWidth","showPopup","togglePopup","tract","setTract","municipality","setMunicipality","lngLat","setLngLat","submarket","setSubmarket","useEffect","document","querySelector","offsetWidth","handleWidthResize","window","innerWidth","addEventListener","removeEventListener","dataNaTracts","height","onViewportChange","mapboxApiAccessToken","mapStyle","scrollZoom","onHover","e","hTract","features","find","sourceLayer","hMunicipality","properties","municipal","ct10_id","selectedSubmarket","url","latitude","longitude","closeButton","onClose","anchor","MenuCloseButton","Highlight","activeLayer","sidebarOpen","role","onClick","onKeyDown","key","size","color","themeColors","white","weight","defaultProps","toggleSwitchSyle","accentPurple","toggleCircleStyle","Toggle","toggleInputStyle","tabIndex","className","autoComplete","checked","onChange","sidebarContentStyle","titleWrapperStyle","sidebarSubtitleStyle","CardFace","children","sidebarTitleStyle","sidebarLinkStyle","highlightPurple","to","updateLayer","layer","listItemStyles","LayerButton","buttonStyles","warmGray","fontGray","LayerMenu","submarketHighlights","1","2","3","4","5","6","7","sidebarWrapper","panelStyle","sidebarList","sidebarListItem","reportLinkStyle","Sidebar","listItems","map","highlight","toString","query","render","allMarkdownRemark","nodes","internal","content","Stack","props","ref","mirrored","restProps","_useContext","contextColor","contextSize","contextWeight","contextMirrored","restContext","createElement","Object","assign","xmlns","fill","viewBox","transform","undefined","points","stroke","strokeLinecap","strokeLinejoin","strokeWidth","opacity","d","console","error","displayName","MobileSidebar","bgPurple","initialState","zoom","reducer","state","action","ToggleableMap","useReducer","Index","href","rel","postgres","allHousSubmarketsCtsList"],"mappings":"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","file":"component---src-pages-index-tsx-4af3068e9d67606b04c0.js","sourcesContent":["import React from 'react';\nimport { Layer } from 'react-map-gl';\nimport { submarketColors } from '../../utils/theme';\n\ntype SubmarketLayerProps = {\n  id: 1 | 2 | 3 | 4 | 5 | 6 | 7,\n  data: {},\n  isVisible: Boolean,\n}\n\nconst SubmarketLayer: React.FC<SubmarketLayerProps> = ({ id, data, isVisible }) => {\n  const choropleth = ['match', ['get', 'ct10_id']];\n  const choroplethBorders = ['match', ['get', 'ct10_id']];\n  data.forEach((row) => {\n    choropleth.push(row.ct10Id, row.submktId === id ? submarketColors[id] : 'rgba(0, 0, 0, 0)');\n    choroplethBorders.push(row.ct10Id, row.submktId === id ? '#707070' : 'rgba(0, 0, 0, 0)');\n  });\n  choropleth.push('#B6B6B6');\n  choroplethBorders.push('#707070');\n\n  return (\n    <React.Fragment>\n      <Layer\n        type=\"fill\"\n        id={`submarket-${id}`}\n        source=\"2010 Census Tracts\"\n        source-layer=\"Tracts-2jsl06\"\n        paint={{ 'fill-color': choropleth }}\n        layout={{ visibility: isVisible ? 'visible' : 'none' }}\n      />\n      <Layer\n        type=\"line\"\n        id={`submarket-${id}-border`}\n        source=\"2010 Census Tracts\"\n        source-layer=\"Tracts-2jsl06\"\n        paint={{ 'line-color': choroplethBorders, 'line-width': .25 }}\n        layout={{ visibility: isVisible ? 'visible' : 'none' }}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default SubmarketLayer;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactMapGL, {\n  Source, Layer, NavigationControl, Popup,\n} from 'react-map-gl';\nimport { css } from '@emotion/react';\nimport SubmarketLayer from './SubmarketLayer';\nimport { fonts } from '../../utils/theme';\n\nconst navigationStyle = css`\n  bottom: 3.2rem;\n  position: absolute;\n  right: 1.6rem;\n\n  @media (max-width: 640px) {\n    bottom: 4.2rem;\n    right: 1rem;\n  }\n`;\n\nconst municipalityStyle = css`\n  font-family: ${fonts.calibre};\n  font-size: 2rem;\n  font-weight: 600;\n  line-height: 1.8rem;\n  margin: 1rem 0 0 0;\n`;\n\nconst Map = ({\n  viewport, dispatch, data, layerVisibility,\n}) => {\n  const [width, setWidth] = useState(700);\n  const [showPopup, togglePopup] = useState(false);\n  const [tract, setTract] = useState('');\n  const [municipality, setMunicipality] = useState('');\n  const [lngLat, setLngLat] = useState();\n  const [submarket, setSubmarket] = useState();\n  useEffect(() => {\n    setWidth(document.querySelector('main').offsetWidth);\n  }, []);\n\n  useEffect(() => {\n    const handleWidthResize = () => setWidth(window.innerWidth);\n    window.addEventListener('resize', handleWidthResize);\n    return () => window.removeEventListener('resize', handleWidthResize);\n  }, []);\n\n  const dataNaTracts = ['match', ['get', 'ct10_id']];\n  data.forEach((row) => {\n    dataNaTracts.push(row.ct10Id,\n      (row.submktId === 1 || row.submktId === 2 || row.submktId === 3 || row.submktId === 4 || row.submktId === 5 || row.submktId === 6 || row.submktId === 7)\n        ? 'rgba(0, 0, 0, 0)'\n        : '#B6B6B6');\n  });\n  dataNaTracts.push('#B6B6B6');\n\n  return (\n    <ReactMapGL\n      {...viewport}\n      width={`${width}px`}\n      height=\"calc(100vh - 115px)\"\n      onViewportChange={(viewport) => dispatch({ type: 'setViewport', viewport })}\n      mapboxApiAccessToken=\"pk.eyJ1IjoiaWhpbGwiLCJhIjoiY2plZzUwMTRzMW45NjJxb2R2Z2thOWF1YiJ9.szIAeMS4c9YTgNsJeG36gg\"\n      mapStyle=\"mapbox://styles/ihill/ckky67v9h2fsd17qvbh2mipkb\"\n      scrollZoom={false}\n      css={css`height: calc(100vh - 115px);`}\n      onHover={(e) => {\n        const hTract = e.features.find((row) => row.sourceLayer === 'Tracts-2jsl06');\n        const hMunicipality = e.features.find((row) => row.sourceLayer === 'MAPC_borders-0im3ea');\n        if (hTract && hMunicipality) {\n          setLngLat(e.lngLat);\n          setMunicipality(hMunicipality.properties.municipal);\n          setTract(hTract.properties.ct10_id);\n          const selectedSubmarket = data.find((row) => row.ct10Id === hTract.properties.ct10_id);\n          selectedSubmarket ? setSubmarket(`Submarket ${selectedSubmarket.submktId}`) : setSubmarket('No submarket');\n          togglePopup(true);\n        } else {\n          togglePopup(false);\n        }\n      }}\n    >\n      <Source id=\"2010 Census Tracts\" type=\"vector\" url=\"mapbox://ihill.aw7gvvhk\">\n        <SubmarketLayer id={1} data={data} isVisible={layerVisibility['1']} />\n        <SubmarketLayer id={2} data={data} isVisible={layerVisibility['2']} />\n        <SubmarketLayer id={3} data={data} isVisible={layerVisibility['3']} />\n        <SubmarketLayer id={4} data={data} isVisible={layerVisibility['4']} />\n        <SubmarketLayer id={5} data={data} isVisible={layerVisibility['5']} />\n        <SubmarketLayer id={6} data={data} isVisible={layerVisibility['6']} />\n        <SubmarketLayer id={7} data={data} isVisible={layerVisibility['7']} />\n        <Layer\n          type=\"fill\"\n          id=\"Data NA\"\n          source=\"2010 Census Tracts\"\n          source-layer=\"Tracts-2jsl06\"\n          paint={{ 'fill-color': dataNaTracts }}\n        />\n      </Source>\n      <Source id=\"MAPC borders\" type=\"vector\" url=\"mapbox://ihill.763lks2o\">\n        <Layer\n          type=\"line\"\n          id=\"MAPC municipal borders\"\n          source=\"MAPC borders\"\n          source-layer=\"MAPC_borders-0im3ea\"\n          paint={{ 'line-color': '#231F20' }}\n        />\n      </Source>\n      <Source id=\"MAPC outer border\" type=\"vector\" url=\"mapbox://ihill.74kb5x0f\">\n        <Layer type=\"line\" source-layer=\"Outline-6xc0m1\" paint={{ 'line-width': 3, 'line-color': '#231F20' }} />\n      </Source>\n      <div css={navigationStyle}>\n        <NavigationControl />\n      </div>\n      {showPopup && (\n      <Popup\n        latitude={lngLat[1]}\n        longitude={lngLat[0]}\n        closeButton={false}\n        onClose={() => togglePopup(false)}\n        anchor=\"top\"\n      >\n        <p css={municipalityStyle}>{municipality}</p>\n        <p css={css`margin: 0;`}>Tract {tract}</p>\n        <p css={css`margin: 0;`}>{submarket}</p>\n      </Popup>\n      )}\n    </ReactMapGL>\n  );\n};\n\nMap.propTypes = {\n  viewport: PropTypes.shape({\n    latitude: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired,\n    zoom: PropTypes.number.isRequired,\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  data: PropTypes.array.isRequired,\n  layerVisibility: PropTypes.objectOf(PropTypes.bool).isRequired,\n};\n\nexport default Map;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from \"@emotion/react\";\nimport { X } from 'phosphor-react';\nimport { submarketColors, themeColors } from '../../utils/theme';\n\nconst MenuCloseButton = css`\n  display: none;\n\n  @media (max-width: 768px) {\n    background: none;\n    border: 0;\n    display: inline;\n  }\n`;\n\nconst Highlight = ({ activeLayer, sidebarOpen, dispatch }) => (\n  <div css={css`\n    background-color: ${submarketColors[activeLayer]};\n    height: inherit;\n    width: 2rem;\n\n    @media (max-width: 768px) {\n      align-items: center;\n      display: flex;\n      height: 3rem;\n      justify-content: flex-end;\n      width: inherit;\n    }\n  `}>\n    <button\n      css={MenuCloseButton}\n      role=\"button\"\n      onClick={() => dispatch({ type: 'toggleMobileSidebar', sidebarOpen: false })}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter') {\n          dispatch({ type: 'toggleMobileSidebar', sidebarOpen: false });\n        }\n      }}\n    >\n      <X\n        size={20}\n        color={themeColors.white}\n        weight=\"bold\"\n      />\n    </button>\n  </div>\n);\n\nHighlight.propTypes = {\n  activeLayer: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  sidebarOpen: PropTypes.bool,\n};\n\nHighlight.defaultProps = {\n  sidebarOpen: false,\n}\n\nexport default Highlight;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from \"@emotion/react\";\nimport { submarketColors, themeColors } from '../../utils/theme';\n\nconst toggleSwitchSyle = css`\n  display: inline-block;\n  height: 2rem;\n  position: relative;\n  width: 4rem;\n\n  &:focus-within {\n    border: 2px solid ${themeColors.accentPurple};\n  }\n`;\n\nconst toggleCircleStyle = css`\n  background-color: #ccc;\n  border-radius: 14px;\n  bottom: 0;\n  cursor: pointer;\n  height: 1.6rem;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  transition: .4s;\n  width: 3.2rem;\n\n  &::before {\n    background-color: white;\n    border-radius: 50%;\n    bottom: 3px;\n    content: '';\n    height: 10px;\n    left: 4px;\n    position: absolute;\n    transition: .4s;\n    width: 10px;\n  }\n`;\n\n\nconst Toggle = ({ activeLayer, layerVisibility, dispatch }) => {\n  const toggleInputStyle = css`\n    height: 0;\n    opacity: 0;\n    width: 0;\n    &:checked + span {\n      background-color: ${submarketColors[activeLayer]};\n    }\n\n    &:checked + span:before {\n      transform: translateX(12px);\n    }\n\n    &:focus {\n      border: 1px solid red;\n      padding: 5px;\n    }\n  `;\n  return (\n    <label css={toggleSwitchSyle}>\n      <input\n        tabIndex={0}\n        type=\"checkbox\"\n        className=\"toggle__input\"\n        autoComplete=\"off\"\n        checked={layerVisibility[activeLayer]}\n        onChange={() => dispatch({ type: 'toggleLayer', layerVisibility: { ...layerVisibility, [activeLayer]: !layerVisibility[activeLayer] } })}\n        css={toggleInputStyle}\n      />\n      <span className=\"toggle__circle\" css={toggleCircleStyle} />\n    </label>\n  )\n};\n\nToggle.propTypes = {\n  activeLayer: PropTypes.number.isRequired,\n  layerVisibility: PropTypes.objectOf(PropTypes.bool).isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Toggle;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { css } from '@emotion/react';\nimport Toggle from './Toggle';\nimport { fonts, submarketColors, themeColors } from '../../utils/theme';\n\nconst sidebarContentStyle = css`\n  padding: 3rem 2rem 0 3rem;\n  width: 43rem;\n\n  @media (max-width: 1024px) {\n    width: 35rem;\n  }\n\n  @media (max-width: 768px) {\n    padding: 2rem;\n    width: 32rem;\n  }\n`;\n\nconst titleWrapperStyle = css`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst sidebarSubtitleStyle = css`\n  font-family: ${fonts.calibre};\n  font-size: 2rem;\n  line-height: 1.8rem;\n`;\n\nconst CardFace = ({ layerVisibility, dispatch, activeLayer, children }) => {\n  const sidebarTitleStyle = css`\n    color: ${submarketColors[activeLayer]};\n    font-family: ${fonts.calibre};\n    font-size: 2.8rem;\n    font-weight: 700;\n    margin: 0 3.6rem 0 0;\n  `;\n\n  const sidebarLinkStyle = css`\n    color: ${submarketColors[activeLayer]};\n    text-decoration: underline;\n\n    &:focus {\n      border: 1px solid ${themeColors.highlightPurple};\n    }\n  `;\n\n  return (\n    <div css={sidebarContentStyle}>\n      <div css={titleWrapperStyle}>\n        <h2 css={sidebarTitleStyle}>\n          Submarket {activeLayer}\n        </h2>\n        <Toggle activeLayer={activeLayer} layerVisibility={layerVisibility} dispatch={dispatch} />\n      </div>\n      { children[0] }\n      <h3 css={sidebarSubtitleStyle}>Key Highlights</h3>\n      { children[1] }\n      <Link to={`/submarkets/${activeLayer}`} css={sidebarLinkStyle} tabIndex={0}>View Full Profile &gt;&gt;</Link>\n    </div>\n  );\n};\n\nCardFace.propTypes = {\n  layerVisibility: PropTypes.objectOf(PropTypes.bool).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  activeLayer: PropTypes.number.isRequired,\n};\n\nexport default CardFace;\n","/** @jsx jsx */\n\nimport React, { Dispatch, SetStateAction } from 'react';\nimport { css, jsx } from \"@emotion/react\";\nimport PropTypes from 'prop-types';\nimport { fonts, themeColors, submarketColors } from '../../utils/theme';\n\nfunction updateLayer(layer: number, activeLayer: number, dispatch: Dispatch<SetStateAction<number>>) {\n  if (layer === activeLayer) {\n    return;\n  } else {\n    dispatch({type: 'setActiveLayer', layer: layer });\n  }\n}\n\nconst listItemStyles = css`\n  align-items: center;\n  border: 1px solid ${themeColors.white};\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\ntype LayerButtonProps = {\n  layer: 1 | 2 | 3 | 4 | 5 | 6 | 7,\n  activeLayer: 1 | 2 | 3 | 4 | 5 | 6 | 7,\n  dispatch: Dispatch<SetStateAction<number>>,\n}\n\nconst LayerButton: React.FC<LayerButtonProps> = ({ layer, activeLayer, dispatch }) => {\n  const buttonStyles = css`\n    background: ${layer === activeLayer ? themeColors.white : themeColors.warmGray};\n    border: none;\n    border-right: ${layer === activeLayer ? `4px solid ${themeColors.white}` : `4px solid ${submarketColors[layer]}`};\n    color: ${layer === activeLayer ?  submarketColors[layer] : 'rgba(122, 122, 122, .5)'};\n    font-family: ${fonts.calibre};\n    font-size: 2.8rem;\n    font-weight: 600;\n    height: 100%;\n    min-width: 5rem;\n    padding: .8rem;\n    transition: color .2s ease-out;\n    width: 100%;\n\n    &:hover {\n      color: ${layer === activeLayer ?  submarketColors[layer] : themeColors.fontGray };\n      transition: 'color .2s ease-out';\n    }\n\n    @media (max-width: 768px) {\n      border-bottom: ${layer === activeLayer ? `4px solid ${themeColors.white}` : `4px solid ${submarketColors[layer]}`};\n      border-right: none;\n      min-width: 0;\n    }\n  `;\n  return (\n    <li css={listItemStyles}>\n      <button\n        css={buttonStyles}\n        tabIndex={0}\n        role=\"button\"\n        onClick={() => updateLayer(layer, activeLayer, dispatch)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            updateLayer(layer, activeLayer, dispatch);\n          }\n        }}\n      >\n        { layer }\n      </button>\n    </li>\n)};\n\nLayerButton.propTypes = {\n  layer: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  activeLayer: PropTypes.number.isRequired,\n};\n\nexport default LayerButton;\nexport { updateLayer };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from \"@emotion/react\";\nimport LayerButton from './LayerButton';\n\nconst LayerMenu = ({ activeLayer, dispatch }) => (\n  <ul\n    className=\"layer-menu\"\n    css={css`\n      display: grid;\n      grid-template-rows: repeat(7, 1fr);\n      list-style: none;\n      margin: 0;\n      padding: 0;\n\n      @media (max-width: 768px) {\n        grid-template-rows: 1fr;\n        grid-template-columns: repeat(7, 1fr);\n      }\n    `}\n  >\n    <LayerButton layer={1} activeLayer={activeLayer} dispatch={dispatch} />\n    <LayerButton layer={2} activeLayer={activeLayer} dispatch={dispatch} />\n    <LayerButton layer={3} activeLayer={activeLayer} dispatch={dispatch} />\n    <LayerButton layer={4} activeLayer={activeLayer} dispatch={dispatch} />\n    <LayerButton layer={5} activeLayer={activeLayer} dispatch={dispatch} />\n    <LayerButton layer={6} activeLayer={activeLayer} dispatch={dispatch} />\n    <LayerButton layer={7} activeLayer={activeLayer} dispatch={dispatch} />\n  </ul>\n);\n\nLayerMenu.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  activeLayer: PropTypes.number.isRequired,\n};\n\nexport default LayerMenu;\n","type Submarket = 1 | 2 | 3 | 4 | 5 | 6 | 7;\n\nconst submarketHighlights: {[Key in Submarket]: Array<string> } = {\n  1: [\n    \"Premium-priced\",\n    \"Increasing home prices and rents\",\n    \"Declining numbers of renters\"\n  ],\n  2: [\n    \"Highest renter share\",\n    \"High rates of foreclosure and cash sales\",\n    \"Highest rate of business buyers\",\n    \"Rapid sale price escalation \"\n  ],\n  3: [\n    \"Oldest housing stock\",\n    \"Mix of single-family and small multifamily\",\n    \"Increasing home prices and rents\"\n  ],\n  4: [\n    \"Older housing stock in suburbs and regional urban centers\",\n    \"Low density and housing costs\",\n    \"Minimal change in rents\",\n    \"Slowest population growth\"\n  ],\n  5: [\n    \"Premium-priced low-density suburbs\",\n    \"Large, older housing stock in very expensive single-family home neighborhoods\",\n    \"Low and declining renter share\"\n  ],\n  6: [\n    \"Suburban edges with the newest housing stock and lowest home prices\",\n    \"Rapid increases in density, rents, and renters\"\n  ],\n  7: [\n    \"Moderate-cost single-family suburbs\",\n    \"Newer housing stock\",\n    \"Few renters\"\n  ]\n}\n\nexport { submarketHighlights };","/** @jsx jsx */\n\nimport React from 'react';\nimport { css, jsx } from \"@emotion/react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { Link } from 'gatsby';\nimport Highlight from './Highlight';\nimport CardFace from './CardFace';\nimport LayerMenu from './LayerMenu';\nimport { themeColors } from '../../utils/theme';\nimport { submarketHighlights } from '../../content/highlights';\n\nconst sidebarWrapper = css`\n  align-items: flex-end;\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  right: 10rem;\n  top: 5rem;\n\n  @media (max-width: 1280px) {\n    align-items: flex-start;\n    right: 5rem;\n  }\n\n  @media (max-width: 1024px) {\n    top: 5rem;\n  }\n\n  @media (max-width: 768px) {\n    right: 1rem;\n    top: 1rem;\n  }\n`;\n\nconst panelStyle = css`\n  background-color: ${themeColors.white};\n  display: flex;\n  flex-direction: row;\n  min-height: 47rem;\n  width: 43rem;\n\n  @media (max-width: 1024px) {\n    width: 40rem;\n  }\n\n  @media (max-width: 768px) {\n    align-items: flex-reverse;\n    border-left: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 36rem;\n  }\n`;\n\nconst sidebarList = css`\n  list-style: none;\n  margin: 0 0 3rem 0;\n  padding: 0;\n`;\n\nconst sidebarListItem = css`\n  margin: 1.2rem 0;\n`;\n\nconst reportLinkStyle = css`\n  color: ${themeColors.fontGray};\n  margin-top: 2rem;\n`;\n\ntype SidebarProps = {\n  layerVisibility: {},\n  activeLayer: number,\n  sidebarOpen: boolean\n  dispatch: React.DispatchWithoutAction,\n}\n\nconst Sidebar: React.FC<SidebarProps> = ({ layerVisibility, dispatch, activeLayer, sidebarOpen }) => {\n  const listItems = submarketHighlights[activeLayer].map((highlight) => {\n    return (<li css={sidebarListItem} key={highlight.toString()}>{highlight}</li>)\n  });\n\n  return (\n    <StaticQuery query={graphql`{\n      allMarkdownRemark(filter: {frontmatter: {folder: {in: \"definitions\"}}}, sort: {fields: frontmatter___submarket, order: ASC}) {\n        nodes {\n          internal {\n            content\n              }\n            }\n          }\n      }`}\n      render={data => (\n        <div css={sidebarWrapper}>\n          <aside css={panelStyle}>\n            <Highlight activeLayer={activeLayer} dispatch={dispatch} sidebarOpen={sidebarOpen} />\n            <CardFace activeLayer={activeLayer} layerVisibility={layerVisibility} dispatch={dispatch}>\n            <p>{data.allMarkdownRemark.nodes[activeLayer-1].internal.content}</p>\n              <ul css={sidebarList}>\n                {listItems}\n              </ul>\n            </CardFace>\n            <LayerMenu activeLayer={activeLayer} dispatch={dispatch} layerVisibility={layerVisibility} />\n          </aside>\n          <Link to=\"/policy-strategy\" css={reportLinkStyle}>Read Policy Strategy &gt;&gt;</Link>\n        </div>\n      )\n    }\n    />\n)}\n\nexport default Sidebar;\n","import React, { forwardRef, useContext } from 'react';\nimport { IconContext } from '../lib/index.esm.js';\nimport { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nvar renderPathFor = function renderPathFor(weight, color) {\n  switch (weight) {\n    case \"bold\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"32 176 128 232 224 176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"polyline\", {\n        points: \"32 128 128 184 224 128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"polygon\", {\n        points: \"32 80 128 136 224 80 128 24 32 80\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }));\n\n    case \"duotone\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polygon\", {\n        points: \"32 80 128 136 224 80 128 24 32 80\",\n        opacity: \"0.2\"\n      }), React.createElement(\"polyline\", {\n        points: \"32 176 128 232 224 176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"polyline\", {\n        points: \"32 128 128 184 224 128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"polygon\", {\n        points: \"32 80 128 136 224 80 128 24 32 80\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    case \"fill\":\n      return React.createElement(React.Fragment, null, React.createElement(\"g\", null, React.createElement(\"path\", {\n        d: \"M219.96875,169.08984,128,222.73828,36.03125,169.08984a8.00008,8.00008,0,0,0-8.0625,13.82032l96,56a8.00059,8.00059,0,0,0,8.0625,0l96-56a8.00008,8.00008,0,0,0-8.0625-13.82032Z\"\n      }), React.createElement(\"path\", {\n        d: \"M219.96875,121.08984,128,174.73828,36.03125,121.08984a8.00008,8.00008,0,0,0-8.0625,13.82032l96,56a8.00059,8.00059,0,0,0,8.0625,0l96-56a8.00008,8.00008,0,0,0-8.0625-13.82032Z\"\n      }), React.createElement(\"path\", {\n        d: \"M27.96875,86.91016l96,56a8.00059,8.00059,0,0,0,8.0625,0l96-56a8.00016,8.00016,0,0,0,0-13.82032l-96-56a8.00059,8.00059,0,0,0-8.0625,0l-96,56a8.00016,8.00016,0,0,0,0,13.82032Z\"\n      })));\n\n    case \"light\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"32 176 128 232 224 176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"polyline\", {\n        points: \"32 128 128 184 224 128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"polygon\", {\n        points: \"32 80 128 136 224 80 128 24 32 80\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }));\n\n    case \"thin\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"32 176 128 232 224 176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"polyline\", {\n        points: \"32 128 128 184 224 128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"polygon\", {\n        points: \"32 80 128 136 224 80 128 24 32 80\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }));\n\n    case \"regular\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"32 176 128 232 224 176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"polyline\", {\n        points: \"32 128 128 184 224 128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"polygon\", {\n        points: \"32 80 128 136 224 80 128 24 32 80\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    default:\n      console.error('Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".');\n      return null;\n  }\n};\n\nvar Stack = /*#__PURE__*/forwardRef(function (props, ref) {\n  var color = props.color,\n      size = props.size,\n      weight = props.weight,\n      mirrored = props.mirrored,\n      children = props.children,\n      restProps = _objectWithoutPropertiesLoose(props, [\"color\", \"size\", \"weight\", \"mirrored\", \"children\"]);\n\n  var _useContext = useContext(IconContext),\n      contextColor = _useContext.color,\n      contextSize = _useContext.size,\n      contextWeight = _useContext.weight,\n      contextMirrored = _useContext.mirrored,\n      restContext = _objectWithoutPropertiesLoose(_useContext, [\"color\", \"size\", \"weight\", \"mirrored\"]);\n\n  return React.createElement(\"svg\", Object.assign({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size != null ? size : contextSize,\n    height: size != null ? size : contextSize,\n    fill: color != null ? color : contextColor,\n    viewBox: \"0 0 256 256\",\n    transform: mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined\n  }, restContext, restProps), children, React.createElement(\"rect\", {\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));\n});\nStack.displayName = \"Stack\";\nexport default Stack;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from \"@emotion/react\";\nimport { Stack } from 'phosphor-react';\nimport Sidebar from './Sidebar';\nimport { themeColors } from '../../utils/theme';\n\n\nconst MobileSidebar = ({ layerVisibility, dispatch, activeLayer, sidebarOpen }) => (\n  <>\n    <button\n      tabIndex={0}\n      role=\"button\"\n      onClick={() => dispatch({ type: 'toggleMobileSidebar', sidebarOpen: true })}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter') {\n          dispatch({ type: 'toggleMobileSidebar', sidebarOpen: true });\n        }\n      }}\n      css={css`\n        background: ${themeColors.white};\n        display: ${sidebarOpen ? 'none' : 'inline'};\n        color: ${themeColors.bgPurple};\n        border: 2px solid ${themeColors.bgPurple};\n        border-radius: 8px;\n        padding: .4rem;\n        position: absolute;\n        top: .8rem;\n        right: .8rem;\n      `}\n    >\n      <Stack\n        size={36}\n      />\n    </button>\n    { sidebarOpen ? <Sidebar layerVisibility={layerVisibility} dispatch={dispatch} activeLayer={activeLayer} sidebarOpen={sidebarOpen} /> : ''}\n  </>\n);\n\nMobileSidebar.propTypes = {\n  layerVisibility: PropTypes.objectOf(PropTypes.bool).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  activeLayer: PropTypes.number.isRequired,\n  sidebarOpen: PropTypes.bool.isRequired,\n};\n\nexport default MobileSidebar;\n","import React, { useReducer } from 'react';\nimport { css } from '@emotion/react';\nimport Map from './Map';\nimport Sidebar from './Sidebar';\nimport MobileSidebar from './MobileSidebar';\n\nconst initialState = {\n  viewport: {\n    latitude: 42.366,\n    longitude: -70.816,\n    zoom: 9.12,\n  },\n  layerVisibility: {\n    1: true,\n    2: true,\n    3: true,\n    4: true,\n    5: true,\n    6: true,\n    7: true,\n  },\n  activeLayer: 1,\n  sidebarOpen: false,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'setViewport':\n      return { ...state, viewport: action.viewport };\n    case 'toggleLayer':\n      return { ...state, layerVisibility: action.layerVisibility };\n    case 'setActiveLayer':\n      return { ...state, activeLayer: action.layer };\n    case 'toggleMobileSidebar':\n      return { ...state, sidebarOpen: action.sidebarOpen };\n    default:\n      return { state };\n  }\n}\n\nconst ToggleableMap = ({ data }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const width = typeof window !== 'undefined' ? window.innerWidth : '';\n\n  return (\n    <div css={css`position: relative;`}>\n      <Map viewport={state.viewport} dispatch={dispatch} data={data} layerVisibility={state.layerVisibility} />\n      { width <= 768\n        ? <MobileSidebar layerVisibility={state.layerVisibility} dispatch={dispatch} activeLayer={state.activeLayer} sidebarOpen={state.sidebarOpen} />\n        : <Sidebar layerVisibility={state.layerVisibility} dispatch={dispatch} activeLayer={state.activeLayer} />}\n    </div>\n  );\n};\n\nexport default ToggleableMap;\n","import React from 'react';\nimport { HomepageMapQuery } from '../../types/gatsby-graphql';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport ToggleableMap from '../components/home-map/ToggleableMap';\n\nconst Index = ({ data }: { data: HomepageMapQuery }) => (\n  <Layout>\n    <SEO>\n      <link href=\"https://api.tiles.mapbox.com/mapbox-gl-js/v1.13.0/mapbox-gl.css\" rel=\"stylesheet\" />\n    </SEO>\n    <ToggleableMap data={data.postgres.allHousSubmarketsCtsList} />\n  </Layout>\n);\n\nexport default Index;\nexport const data = graphql`\n  query HomepageMap {\n    postgres {\n      allHousSubmarketsCtsList {\n        ct10Id\n        submktId\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}